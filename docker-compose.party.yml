version: '3.8'

services:
  # MongoDB (shared for both Commercial Banking and Capital Markets)
  mongodb:
    image: mongo:7.0
    container_name: party-mongodb
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
    volumes:
      - ./infrastructure/mongodb/init-party-data.js:/docker-entrypoint-initdb.d/init-party-data.js:ro
      - party_mongodb_data:/data/db
    networks:
      - party-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/admin -u admin -p admin123 --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Neo4j Graph Database (for federated party model)
  neo4j:
    image: neo4j:5.14
    container_name: party-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_dbms_memory_pagecache_size: 1G
      NEO4J_dbms_memory_heap_initial__size: 1G
      NEO4J_dbms_memory_heap_max__size: 2G
      NEO4J_PLUGINS: '["graph-data-science", "apoc"]'
    volumes:
      - party_neo4j_data:/data
      - party_neo4j_logs:/logs
    networks:
      - party-network
    healthcheck:
      test: wget http://localhost:7474 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  # Commercial Banking Party Service
  commercial-banking-party-service:
    build:
      context: ./backend
      dockerfile: commercial-banking-party-service/Dockerfile
    container_name: commercial-banking-party-service
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      MONGODB_USER: commercialuser
      MONGODB_PASSWORD: commercialpass
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - party-network
    healthcheck:
      test: curl -f http://localhost:8084/api/commercial-banking/parties/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5

  # Capital Markets Party Service
  capital-markets-party-service:
    build:
      context: ./backend
      dockerfile: capital-markets-party-service/Dockerfile
    container_name: capital-markets-party-service
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      MONGODB_USER: capitaluser
      MONGODB_PASSWORD: capitalpass
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - party-network
    healthcheck:
      test: curl -f http://localhost:8085/api/capital-markets/counterparties/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5

  # Federated Party Service (Neo4j-based)
  party-service:
    build:
      context: ./backend
      dockerfile: party-service/Dockerfile
    container_name: party-service
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_NEO4J_URI: bolt://neo4j:7687
      SPRING_NEO4J_AUTHENTICATION_USERNAME: neo4j
      SPRING_NEO4J_AUTHENTICATION_PASSWORD: password
      COMMERCIAL_BANKING_API_URL: http://commercial-banking-party-service:8084
      CAPITAL_MARKETS_API_URL: http://capital-markets-party-service:8085
    depends_on:
      neo4j:
        condition: service_healthy
      commercial-banking-party-service:
        condition: service_healthy
      capital-markets-party-service:
        condition: service_healthy
    networks:
      - party-network
    healthcheck:
      test: curl -f http://localhost:8083/actuator/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5

networks:
  party-network:
    driver: bridge

volumes:
  party_mongodb_data:
  party_neo4j_data:
  party_neo4j_logs:
