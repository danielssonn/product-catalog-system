spring:
  application:
    name: api-gateway
  
  # MongoDB configuration
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://admin:admin123@localhost:27018/product_catalog_db?authSource=admin}
      auto-index-creation: false
    
    # Redis configuration for rate limiting
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
  
  # Security
  security:
    user:
      name: ${GATEWAY_ADMIN_USER:admin}
      password: ${GATEWAY_ADMIN_PASSWORD:admin123}
      roles: ADMIN
  
  # Kafka configuration
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
  
  # Cloud Gateway configuration
  cloud:
    gateway:
      # Global CORS configuration
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins: 
              - "${CORS_ALLOWED_ORIGINS:http://localhost:4200,http://localhost:3000}"
            allowed-methods:
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
              - OPTIONS
            allowed-headers:
              - "*"
            exposed-headers:
              - X-Channel
              - X-Request-ID
            allow-credentials: true
            max-age: 3600
      
      # Default filters (applied to all routes)
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
        - AddResponseHeader=X-Response-Time, ${response-time}
      
      # HTTP client configuration
      httpclient:
        connect-timeout: 2000
        response-timeout: 5000
        pool:
          type: elastic
          max-connections: 100
          max-idle-time: 10000
          max-life-time: 60000
          acquire-timeout: 45000

# Service URLs (for routing)
services:
  product-service:
    url: ${PRODUCT_SERVICE_URL:http://product-service:8081}
  workflow-service:
    url: ${WORKFLOW_SERVICE_URL:http://workflow-service:8089}
  party-service:
    url: ${PARTY_SERVICE_URL:http://party-service:8083}
  file-processing-service:
    url: ${FILE_PROCESSING_SERVICE_URL:http://file-processing-service:8094}
  payment-service:
    url: ${PAYMENT_SERVICE_URL:http://payment-service:8095}
  application-service:
    url: ${APPLICATION_SERVICE_URL:http://application-service:8096}

# Resilience4j Circuit Breaker configuration
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
    
    instances:
      product-service-cb:
        baseConfig: default
      workflow-service-cb:
        baseConfig: default
      party-service-cb:
        baseConfig: default
      file-processing-cb:
        baseConfig: default
        waitDurationInOpenState: 30s
      payment-service-cb:
        baseConfig: default
        failureRateThreshold: 30
  
  # Retry configuration
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 500ms
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
        ignoreExceptions:
          - org.springframework.web.client.HttpClientErrorException.BadRequest
          - org.springframework.web.client.HttpClientErrorException.Unauthorized

  # Rate Limiter configuration (per channel)
  ratelimiter:
    configs:
      default:
        limitForPeriod: 1000
        limitRefreshPeriod: 1m
        timeoutDuration: 0s
    
    instances:
      public-api:
        limitForPeriod: 1000
      host-to-host:
        limitForPeriod: 100
      erp-integration:
        limitForPeriod: 5000
      client-portal:
        limitForPeriod: 500
      salesforce-ops:
        limitForPeriod: 2000

# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    export:
      prometheus:
        enabled: true

# Server configuration
server:
  port: ${SERVER_PORT:8080}
  error:
    include-message: always
    include-binding-errors: always
  shutdown: graceful

# Logging configuration
logging:
  level:
    root: ${LOG_LEVEL_ROOT:INFO}
    com.bank.product.gateway: ${LOG_LEVEL_APP:INFO}
    org.springframework.cloud.gateway: ${LOG_LEVEL_GATEWAY:INFO}
    org.springframework.security: ${LOG_LEVEL_SECURITY:WARN}
    org.springframework.data.mongodb: WARN
    org.springframework.kafka: WARN
    io.netty: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# API Gateway specific configuration
gateway:
  # Channel-specific configuration
  channels:
    public-api:
      enabled: true
      rate-limit: 1000
      auth-method: JWT_BEARER
    host-to-host:
      enabled: true
      rate-limit: 100
      auth-method: MUTUAL_TLS_API_KEY
      file-formats: CSV,FIXED_WIDTH,ISO20022
    erp-integration:
      enabled: true
      rate-limit: 5000
      auth-method: OAUTH2_CLIENT_CREDENTIALS
    client-portal:
      enabled: true
      rate-limit: 500
      auth-method: OAUTH2_AUTHORIZATION_CODE
    salesforce-ops:
      enabled: true
      rate-limit: 2000
      auth-method: SALESFORCE_OAUTH
  
  # Version support
  api-versions:
    supported: v1,v2
    default: v1
    deprecated: []
  
  # Multi-tenancy
  tenancy:
    validation-enabled: true
    tenant-header: X-Tenant-ID
    user-header: X-User-ID
  
  # Party-aware routing
  party:
    enabled: true
    party-header: X-Party-ID
    party-roles-header: X-Party-Roles
  
  # File processing (Host-to-Host)
  file-processing:
    max-file-size: 100MB
    allowed-formats: CSV,FIXED_WIDTH,ISO20022,JSON
    async-processing: true
    callback-enabled: true
  
  # Idempotency
  idempotency:
    enabled: true
    cache-size: 10000
    cache-ttl: 24h
  
  # Audit logging
  audit:
    enabled: true
    log-request-body: false
    log-response-body: false
    kafka-enabled: true
    kafka-topic: api-audit-logs
